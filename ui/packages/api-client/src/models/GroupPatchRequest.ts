/* tslint:disable */
/* eslint-disable */
/**
 * HoshizoraPics API
 * API for testing and demonstration purposes.
 *
 * The version of the OpenAPI document: latest
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { GroupConfigUpdatePatch } from './GroupConfigUpdatePatch';
import {
    GroupConfigUpdatePatchFromJSON,
    GroupConfigUpdatePatchFromJSONTyped,
    GroupConfigUpdatePatchToJSON,
    GroupConfigUpdatePatchToJSONTyped,
} from './GroupConfigUpdatePatch';

/**
 * 
 * @export
 * @interface GroupPatchRequest
 */
export interface GroupPatchRequest {
    /**
     * 
     * @type {GroupConfigUpdatePatch}
     * @memberof GroupPatchRequest
     */
    config?: GroupConfigUpdatePatch | null;
    /**
     * 
     * @type {string}
     * @memberof GroupPatchRequest
     */
    description?: string | null;
    /**
     * 
     * @type {string}
     * @memberof GroupPatchRequest
     */
    name?: string | null;
    /**
     * 
     * @type {Array<string>}
     * @memberof GroupPatchRequest
     */
    roles?: Array<string> | null;
    /**
     * 
     * @type {number}
     * @memberof GroupPatchRequest
     */
    strategyId?: number | null;
}

/**
 * Check if a given object implements the GroupPatchRequest interface.
 */
export function instanceOfGroupPatchRequest(value: object): value is GroupPatchRequest {
    return true;
}

export function GroupPatchRequestFromJSON(json: any): GroupPatchRequest {
    return GroupPatchRequestFromJSONTyped(json, false);
}

export function GroupPatchRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): GroupPatchRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'config': json['config'] == null ? undefined : GroupConfigUpdatePatchFromJSON(json['config']),
        'description': json['description'] == null ? undefined : json['description'],
        'name': json['name'] == null ? undefined : json['name'],
        'roles': json['roles'] == null ? undefined : json['roles'],
        'strategyId': json['strategyId'] == null ? undefined : json['strategyId'],
    };
}

  export function GroupPatchRequestToJSON(json: any): GroupPatchRequest {
      return GroupPatchRequestToJSONTyped(json, false);
  }

  export function GroupPatchRequestToJSONTyped(value?: GroupPatchRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'config': GroupConfigUpdatePatchToJSON(value['config']),
        'description': value['description'],
        'name': value['name'],
        'roles': value['roles'],
        'strategyId': value['strategyId'],
    };
}

