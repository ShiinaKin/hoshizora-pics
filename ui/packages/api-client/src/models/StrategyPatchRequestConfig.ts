/* tslint:disable */
/* eslint-disable */
/**
 * HoshizoraPics API
 * API for testing and demonstration purposes.
 *
 * The version of the OpenAPI document: latest
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { StrategyRequestS3StrategyConfig } from './StrategyRequestS3StrategyConfig';
import {
    StrategyRequestS3StrategyConfigFromJSON,
    StrategyRequestS3StrategyConfigFromJSONTyped,
    StrategyRequestS3StrategyConfigToJSON,
    StrategyRequestS3StrategyConfigToJSONTyped,
} from './StrategyRequestS3StrategyConfig';
import type { StrategyRequestLocalStrategyConfig } from './StrategyRequestLocalStrategyConfig';
import {
    StrategyRequestLocalStrategyConfigFromJSON,
    StrategyRequestLocalStrategyConfigFromJSONTyped,
    StrategyRequestLocalStrategyConfigToJSON,
    StrategyRequestLocalStrategyConfigToJSONTyped,
} from './StrategyRequestLocalStrategyConfig';

/**
 * io/sakurasou/model/strategy/StrategyConfig.kt
 * @export
 * @interface StrategyPatchRequestConfig
 */
export interface StrategyPatchRequestConfig {
    /**
     * 
     * @type {any}
     * @memberof StrategyPatchRequestConfig
     */
    uploadFolder?: any | null;
    /**
     * 
     * @type {any}
     * @memberof StrategyPatchRequestConfig
     */
    thumbnailFolder?: any | null;
    /**
     * 
     * @type {any}
     * @memberof StrategyPatchRequestConfig
     */
    strategyType?: any | null;
    /**
     * 
     * @type {any}
     * @memberof StrategyPatchRequestConfig
     */
    type?: any | null;
    /**
     * 
     * @type {any}
     * @memberof StrategyPatchRequestConfig
     */
    endpoint?: any | null;
    /**
     * 
     * @type {any}
     * @memberof StrategyPatchRequestConfig
     */
    bucketName?: any | null;
    /**
     * 
     * @type {any}
     * @memberof StrategyPatchRequestConfig
     */
    region?: any | null;
    /**
     * 
     * @type {any}
     * @memberof StrategyPatchRequestConfig
     */
    accessKey?: any | null;
    /**
     * 
     * @type {any}
     * @memberof StrategyPatchRequestConfig
     */
    secretKey?: any | null;
    /**
     * 
     * @type {any}
     * @memberof StrategyPatchRequestConfig
     */
    publicUrl?: any | null;
}

/**
 * Check if a given object implements the StrategyPatchRequestConfig interface.
 */
export function instanceOfStrategyPatchRequestConfig(value: object): value is StrategyPatchRequestConfig {
    return true;
}

export function StrategyPatchRequestConfigFromJSON(json: any): StrategyPatchRequestConfig {
    return StrategyPatchRequestConfigFromJSONTyped(json, false);
}

export function StrategyPatchRequestConfigFromJSONTyped(json: any, ignoreDiscriminator: boolean): StrategyPatchRequestConfig {
    if (json == null) {
        return json;
    }
    return {
        
        'uploadFolder': json['uploadFolder'] == null ? undefined : json['uploadFolder'],
        'thumbnailFolder': json['thumbnailFolder'] == null ? undefined : json['thumbnailFolder'],
        'strategyType': json['strategyType'] == null ? undefined : json['strategyType'],
        'type': json['type'] == null ? undefined : json['type'],
        'endpoint': json['endpoint'] == null ? undefined : json['endpoint'],
        'bucketName': json['bucketName'] == null ? undefined : json['bucketName'],
        'region': json['region'] == null ? undefined : json['region'],
        'accessKey': json['accessKey'] == null ? undefined : json['accessKey'],
        'secretKey': json['secretKey'] == null ? undefined : json['secretKey'],
        'publicUrl': json['publicUrl'] == null ? undefined : json['publicUrl'],
    };
}

  export function StrategyPatchRequestConfigToJSON(json: any): StrategyPatchRequestConfig {
      return StrategyPatchRequestConfigToJSONTyped(json, false);
  }

  export function StrategyPatchRequestConfigToJSONTyped(value?: StrategyPatchRequestConfig | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'uploadFolder': value['uploadFolder'],
        'thumbnailFolder': value['thumbnailFolder'],
        'strategyType': value['strategyType'],
        'type': value['type'],
        'endpoint': value['endpoint'],
        'bucketName': value['bucketName'],
        'region': value['region'],
        'accessKey': value['accessKey'],
        'secretKey': value['secretKey'],
        'publicUrl': value['publicUrl'],
    };
}

