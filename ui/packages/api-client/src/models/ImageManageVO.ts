/* tslint:disable */
/* eslint-disable */
/**
 * HoshizoraPics API
 * API for testing and demonstration purposes.
 *
 * The version of the OpenAPI document: latest
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { KotlinxDatetimeLocalDateTime } from './KotlinxDatetimeLocalDateTime';
import {
    KotlinxDatetimeLocalDateTimeFromJSON,
    KotlinxDatetimeLocalDateTimeFromJSONTyped,
    KotlinxDatetimeLocalDateTimeToJSON,
    KotlinxDatetimeLocalDateTimeToJSONTyped,
} from './KotlinxDatetimeLocalDateTime';

/**
 * 
 * @export
 * @interface ImageManageVO
 */
export interface ImageManageVO {
    /**
     * 
     * @type {number}
     * @memberof ImageManageVO
     */
    albumId: number;
    /**
     * 
     * @type {string}
     * @memberof ImageManageVO
     */
    albumName: string;
    /**
     * 
     * @type {KotlinxDatetimeLocalDateTime}
     * @memberof ImageManageVO
     */
    createTime: KotlinxDatetimeLocalDateTime;
    /**
     * 
     * @type {string}
     * @memberof ImageManageVO
     */
    description?: string | null;
    /**
     * 
     * @type {string}
     * @memberof ImageManageVO
     */
    displayName: string;
    /**
     * 
     * @type {number}
     * @memberof ImageManageVO
     */
    groupId: number;
    /**
     * 
     * @type {string}
     * @memberof ImageManageVO
     */
    groupName: string;
    /**
     * 
     * @type {number}
     * @memberof ImageManageVO
     */
    height: number;
    /**
     * 
     * @type {number}
     * @memberof ImageManageVO
     */
    id: number;
    /**
     * 
     * @type {boolean}
     * @memberof ImageManageVO
     */
    isPrivate: boolean;
    /**
     * 
     * @type {string}
     * @memberof ImageManageVO
     */
    md5: string;
    /**
     * 
     * @type {string}
     * @memberof ImageManageVO
     */
    mimeType: string;
    /**
     * 
     * @type {string}
     * @memberof ImageManageVO
     */
    originName: string;
    /**
     * 
     * @type {number}
     * @memberof ImageManageVO
     */
    ownerId: number;
    /**
     * 
     * @type {string}
     * @memberof ImageManageVO
     */
    ownerName: string;
    /**
     * 
     * @type {string}
     * @memberof ImageManageVO
     */
    sha256: string;
    /**
     * 
     * @type {number}
     * @memberof ImageManageVO
     */
    size: number;
    /**
     * 
     * @type {number}
     * @memberof ImageManageVO
     */
    width: number;
}

/**
 * Check if a given object implements the ImageManageVO interface.
 */
export function instanceOfImageManageVO(value: object): value is ImageManageVO {
    if (!('albumId' in value) || value['albumId'] === undefined) return false;
    if (!('albumName' in value) || value['albumName'] === undefined) return false;
    if (!('createTime' in value) || value['createTime'] === undefined) return false;
    if (!('displayName' in value) || value['displayName'] === undefined) return false;
    if (!('groupId' in value) || value['groupId'] === undefined) return false;
    if (!('groupName' in value) || value['groupName'] === undefined) return false;
    if (!('height' in value) || value['height'] === undefined) return false;
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('isPrivate' in value) || value['isPrivate'] === undefined) return false;
    if (!('md5' in value) || value['md5'] === undefined) return false;
    if (!('mimeType' in value) || value['mimeType'] === undefined) return false;
    if (!('originName' in value) || value['originName'] === undefined) return false;
    if (!('ownerId' in value) || value['ownerId'] === undefined) return false;
    if (!('ownerName' in value) || value['ownerName'] === undefined) return false;
    if (!('sha256' in value) || value['sha256'] === undefined) return false;
    if (!('size' in value) || value['size'] === undefined) return false;
    if (!('width' in value) || value['width'] === undefined) return false;
    return true;
}

export function ImageManageVOFromJSON(json: any): ImageManageVO {
    return ImageManageVOFromJSONTyped(json, false);
}

export function ImageManageVOFromJSONTyped(json: any, ignoreDiscriminator: boolean): ImageManageVO {
    if (json == null) {
        return json;
    }
    return {
        
        'albumId': json['albumId'],
        'albumName': json['albumName'],
        'createTime': KotlinxDatetimeLocalDateTimeFromJSON(json['createTime']),
        'description': json['description'] == null ? undefined : json['description'],
        'displayName': json['displayName'],
        'groupId': json['groupId'],
        'groupName': json['groupName'],
        'height': json['height'],
        'id': json['id'],
        'isPrivate': json['isPrivate'],
        'md5': json['md5'],
        'mimeType': json['mimeType'],
        'originName': json['originName'],
        'ownerId': json['ownerId'],
        'ownerName': json['ownerName'],
        'sha256': json['sha256'],
        'size': json['size'],
        'width': json['width'],
    };
}

  export function ImageManageVOToJSON(json: any): ImageManageVO {
      return ImageManageVOToJSONTyped(json, false);
  }

  export function ImageManageVOToJSONTyped(value?: ImageManageVO | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'albumId': value['albumId'],
        'albumName': value['albumName'],
        'createTime': KotlinxDatetimeLocalDateTimeToJSON(value['createTime']),
        'description': value['description'],
        'displayName': value['displayName'],
        'groupId': value['groupId'],
        'groupName': value['groupName'],
        'height': value['height'],
        'id': value['id'],
        'isPrivate': value['isPrivate'],
        'md5': value['md5'],
        'mimeType': value['mimeType'],
        'originName': value['originName'],
        'ownerId': value['ownerId'],
        'ownerName': value['ownerName'],
        'sha256': value['sha256'],
        'size': value['size'],
        'width': value['width'],
    };
}

