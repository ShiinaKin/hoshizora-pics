/* tslint:disable */
/* eslint-disable */
/**
 * HoshizoraPics API
 * API for testing and demonstration purposes.
 *
 * The version of the OpenAPI document: latest
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface KotlinxDatetimeLocalTime
 */
export interface KotlinxDatetimeLocalTime {
    /**
     * 
     * @type {number}
     * @memberof KotlinxDatetimeLocalTime
     */
    hour: number;
    /**
     * 
     * @type {number}
     * @memberof KotlinxDatetimeLocalTime
     */
    minute: number;
    /**
     * 
     * @type {number}
     * @memberof KotlinxDatetimeLocalTime
     */
    nanosecond: number;
    /**
     * 
     * @type {number}
     * @memberof KotlinxDatetimeLocalTime
     */
    second: number;
}

/**
 * Check if a given object implements the KotlinxDatetimeLocalTime interface.
 */
export function instanceOfKotlinxDatetimeLocalTime(value: object): value is KotlinxDatetimeLocalTime {
    if (!('hour' in value) || value['hour'] === undefined) return false;
    if (!('minute' in value) || value['minute'] === undefined) return false;
    if (!('nanosecond' in value) || value['nanosecond'] === undefined) return false;
    if (!('second' in value) || value['second'] === undefined) return false;
    return true;
}

export function KotlinxDatetimeLocalTimeFromJSON(json: any): KotlinxDatetimeLocalTime {
    return KotlinxDatetimeLocalTimeFromJSONTyped(json, false);
}

export function KotlinxDatetimeLocalTimeFromJSONTyped(json: any, ignoreDiscriminator: boolean): KotlinxDatetimeLocalTime {
    if (json == null) {
        return json;
    }
    return {
        
        'hour': json['hour'],
        'minute': json['minute'],
        'nanosecond': json['nanosecond'],
        'second': json['second'],
    };
}

export function KotlinxDatetimeLocalTimeToJSON(value?: KotlinxDatetimeLocalTime | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'hour': value['hour'],
        'minute': value['minute'],
        'nanosecond': value['nanosecond'],
        'second': value['second'],
    };
}

