/* tslint:disable */
/* eslint-disable */
/**
 * HoshizoraPics API
 * API for testing and demonstration purposes.
 *
 * The version of the OpenAPI document: latest
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  CommonResponseCommonSiteSetting,
  CommonResponseKotlinUnit,
  SiteInitRequest,
} from '../models/index';
import {
    CommonResponseCommonSiteSettingFromJSON,
    CommonResponseCommonSiteSettingToJSON,
    CommonResponseKotlinUnitFromJSON,
    CommonResponseKotlinUnitToJSON,
    SiteInitRequestFromJSON,
    SiteInitRequestToJSON,
} from '../models/index';

export interface ApiSiteInitPostRequest {
    siteInitRequest: SiteInitRequest;
}

/**
 * 
 */
export class CommonApi extends runtime.BaseAPI {

    /**
     */
    async apiSiteInitPostRaw(requestParameters: ApiSiteInitPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<CommonResponseKotlinUnit>> {
        if (requestParameters['siteInitRequest'] == null) {
            throw new runtime.RequiredError(
                'siteInitRequest',
                'Required parameter "siteInitRequest" was null or undefined when calling apiSiteInitPost().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/api/site/init`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: SiteInitRequestToJSON(requestParameters['siteInitRequest']),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => CommonResponseKotlinUnitFromJSON(jsonValue));
    }

    /**
     */
    async apiSiteInitPost(requestParameters: ApiSiteInitPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<CommonResponseKotlinUnit> {
        const response = await this.apiSiteInitPostRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * fetch common site setting
     */
    async apiSiteSettingGetRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<CommonResponseCommonSiteSetting>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/site/setting`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => CommonResponseCommonSiteSettingFromJSON(jsonValue));
    }

    /**
     * fetch common site setting
     */
    async apiSiteSettingGet(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<CommonResponseCommonSiteSetting> {
        const response = await this.apiSiteSettingGetRaw(initOverrides);
        return await response.value();
    }

}
