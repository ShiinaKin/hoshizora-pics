/* tslint:disable */
/* eslint-disable */
/**
 * HoshizoraPics API
 * API for testing and demonstration purposes.
 *
 * The version of the OpenAPI document: latest
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  IoSakurasouControllerRequestUserInsertRequest,
  IoSakurasouControllerRequestUserLoginRequest,
} from '../models/index';
import {
    IoSakurasouControllerRequestUserInsertRequestFromJSON,
    IoSakurasouControllerRequestUserInsertRequestToJSON,
    IoSakurasouControllerRequestUserLoginRequestFromJSON,
    IoSakurasouControllerRequestUserLoginRequestToJSON,
} from '../models/index';

export interface ApiUserLoginPostRequest {
    ioSakurasouControllerRequestUserLoginRequest: IoSakurasouControllerRequestUserLoginRequest;
}

export interface ApiUserSignupPostRequest {
    ioSakurasouControllerRequestUserInsertRequest: IoSakurasouControllerRequestUserInsertRequest;
}

/**
 * 
 */
export class AuthApi extends runtime.BaseAPI {

    /**
     */
    async apiUserLoginPostRaw(requestParameters: ApiUserLoginPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        if (requestParameters['ioSakurasouControllerRequestUserLoginRequest'] == null) {
            throw new runtime.RequiredError(
                'ioSakurasouControllerRequestUserLoginRequest',
                'Required parameter "ioSakurasouControllerRequestUserLoginRequest" was null or undefined when calling apiUserLoginPost().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/api/user/login`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: IoSakurasouControllerRequestUserLoginRequestToJSON(requestParameters['ioSakurasouControllerRequestUserLoginRequest']),
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     */
    async apiUserLoginPost(requestParameters: ApiUserLoginPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.apiUserLoginPostRaw(requestParameters, initOverrides);
    }

    /**
     */
    async apiUserSignupPostRaw(requestParameters: ApiUserSignupPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        if (requestParameters['ioSakurasouControllerRequestUserInsertRequest'] == null) {
            throw new runtime.RequiredError(
                'ioSakurasouControllerRequestUserInsertRequest',
                'Required parameter "ioSakurasouControllerRequestUserInsertRequest" was null or undefined when calling apiUserSignupPost().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/api/user/signup`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: IoSakurasouControllerRequestUserInsertRequestToJSON(requestParameters['ioSakurasouControllerRequestUserInsertRequest']),
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     */
    async apiUserSignupPost(requestParameters: ApiUserSignupPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.apiUserSignupPostRaw(requestParameters, initOverrides);
    }

}
